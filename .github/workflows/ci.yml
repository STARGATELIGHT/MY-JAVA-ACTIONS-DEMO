name: Java CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ── 1. Build & test with Maven ───────────────────────────────────────────────
  build-test-package:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build & test
        run: mvn --batch-mode verify

      - name: Package fat JAR
        run: mvn --batch-mode package

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/my-java-actions-demo-*-jar-with-dependencies.jar

  # ── 2. Build Docker image using the JAR ──────────────────────────────────────
  docker-build:
    needs: build-test-package
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download packaged JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target            # puts JAR in target/ so Dockerfile works

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (local only)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: my-java-actions-demo:scan        # re‑used in the scan stage
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ── 3. Scan the image with Trivy ─────────────────────────────────────────────
  docker-scan:
    needs: docker-build
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Ensure image exists (cached build)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: my-java-actions-demo:scan
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: my-java-actions-demo:scan
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          exit-code: 0          # warn only

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  # ── 4. Tag & push to Docker Hub ──────────────────────────────────────────────
  docker-push:
    needs: docker-scan      # only push if scan passes (or warns only)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download packaged JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: edwin123456789000/test-action:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max



